close all,clear,clc
addpath('..\edison_matlab_interface\');
addpath('..\Dataset\smoothedDepth\');
addpath('..\Dataset\RGB\');
addpath('..\Dataset\NormFluxDensity\');
addpath('..\gco-v3.0\matlab\');

ImgIndex = '1_02-59-20';
deltaSmooth = 3;

%% 载入RGB图像
img=imread(strcat(ImgIndex,'.jpg'));
img = L0Smoothing(img,0.001);
img255 = uint8(img*255);

%% 载入深度法向通量
load(strcat(ImgIndex,'_NormFluxDsty.mat'));
NFD =double(NormFluxDensity);
NFDSmoothed = L0Smoothing(NFD,0.02);
NFDSmoothed255 = uint8(NFDSmoothed*255);
figure,imshow(NFDSmoothed255,[]);

%% 载入深度图像
load(strcat(ImgIndex,'_Depth.mat'));
DepthImage =double(smoothedDepth);

DepthContrast = (max(max(DepthImage)) - min(min(DepthImage)))./max(max(DepthImage))
DepthImage = DepthImage - min(min(DepthImage));
DepthImage =DepthImage./max(max(DepthImage));
DepthImage255 = uint8(DepthImage*255);
figure,imshow(DepthImage255,[]);

 %% 进行SLIC图像分割，得到超像素图像 
 imlab = vl_xyz2lab(vl_rgb2xyz(single(img255))) ;
labels = vl_slic(single(imlab), 30, 1) ;



 %% 进行meanshift图像分割，得到超像素图像 
% SpatialBandwidth =6; 
% RangeBandwidth =4.5; 
% MinimumRegionArea = 100; 
% % imgD=cat(3,img255,DepthImage255.*DepthContrast);
% [fimage labels modes regSize]=edison_wrapper(img255,@RGB2Lab,'SpatialBandWidth',SpatialBandwidth,...
%     'RangeBandWidth',RangeBandwidth,'MinimumRegionArea',MinimumRegionArea,'synergistic',true,...
%     'EdgeStrengthThreshold',0.1);
% % figure,imshow(Luv2RGB(fimage),[]);
% 使得labels从开始
labels=uint16(labels)+1;
figure,imshow(labels,[]);

%% 得到分割线
 B=[1 1 1 1 1
    1 1 1 1 1
    1 1 1 1 1
    1 1 1 1 1
    1 1 1 1 1];
    A2=imdilate(labels,B);%图像A1被结构元素B膨胀
   diff = A2-labels;
   a=zeros(size(diff));
   a(diff>0)=1;
   a = uint8(a);
   r = img255(:,:,1);
   g = img255(:,:,2);
   b = img255(:,:,3);
   
   r(a==1)=255;
   g(a==1)=0;
   b(a==1)=0;
   ImgSeg = cat(3,r,g,b);
   figure,imshow(ImgSeg,[]);
   
   
%% 计算Region contrast
[ContrastSaliency,fMAP,numClusters]=RegionLocalContrast(labels,DepthImage,img255,NFDSmoothed,0.06);
% ContrastSaliency = ContrastSaliency./max(max(ContrastSaliency));

%% 计算得到经过深度加权的法向通量
mixDepth =(1 - fMAP(:,:,1)).*fMAP(:,:,3);
mixDepth = mixDepth./max(max(mixDepth))*255;
figure,imshow(mixDepth,[]);


figure,
subplot(2,5,1),imshow(ImgSeg,[]);title('RGB Img');
subplot(2,5,2),imshow(DepthImage255,[]);title('Origin Depth');
subplot(2,5,3),imshow(NFDSmoothed255,[]);title('NormFlux');
subplot(2,5,4),imshow(mixDepth,[]);title('MixDepth');
subplot(2,5,5),imshow(labels,[]);title('Labels');
subplot(2,5,6),imshow(fMAP(:,:,2),[]);title('max');
subplot(2,5,7),imshow(fMAP(:,:,1),[]);title('mean');
subplot(2,5,8),imshow(fMAP(:,:,3),[]);title('Flux');

subplot(2,5,9),imshow(ContrastSaliency,[]);title('Saliency');
figure,imshow(NFDSmoothed255,[]);title('NormFlux');
mixDepth = mixDepth./max(max(mixDepth));
ContrastSaliency = ContrastSaliency./max(max(ContrastSaliency));
figure,imshow(ContrastSaliency.*ContrastSaliency,[]);title('Saliency');
ContrastSaliency = sqrt(ContrastSaliency);

% ContrastSaliency = ContrastSaliency.*ContrastSaliency;



%% graph cut
% [GCSal] = RunGCSal(labels,numClusters,ContrastSaliency,deltaSmooth,fMAP(:,:,3),img255);
% figure,imshow(GCSal,[]);title('GCsal');
 
 
